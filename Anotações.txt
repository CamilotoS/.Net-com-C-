# Esse Arquivo está todas as minhas anotações sobre cursos de .Net com C#.
# O Documento em sí nao possui vinculo nenhum com projetos que estão nesse Repositório
# O foco desse documento e simplesmente fazer anotações e nada mais.
# Create for Ives Camiloto (Ivão)

>> Um Pouco de Historia do .Net <<
Em 1999 - Anders Hejlsberg começou a Trabalhar no C#
Em 2000 - Microsoft lanca o ambiente de dsenvolvimento .Net 1.0
Em 2001 - Miguel de Icaza começa a trabalhar no projeto Mono,uma reimplementação black Box do .net , open source e Multiplataforma (nao trabalha na Mcrosoft)
Em 2002 - Lançamento do Visual Studio .Net com C# 1.0
Em 2003 - Lançamento do .Net 1.1 com Visual Studio 2003 - Trabalham em melhorias na CLR para lançar o CLR2
Em 2005 - Lançamento do >net 2.0 com C# 2.0 no Visual Studio 2005 - Microsoft começõu a atingir seu objetivo inicial ,inclusive evoluindo na web
Em 2007-2008 - Lançamento do .net 3.5 com c# 3.0 no VS 2008 , com Silverlight , WPF e WCF | Microsoft contrata um time de pessoas tinham uma pegada open source
Em 2010 - Lançamento do .Net com C# no VS 2010 - Lança o Windows Azure | Anders Hejlsberg começa a trabalhar no Typescript
Em 2011 - Miguel de Icaza Inicia Xamarin , Basicamente ele desenvolvia em C# aplicativos que rodam em Android e IOS
Em 2012 - Lançamento do .Net 4.5 com C# no VS 2012 | Lançamento do Typescript
Em 2013 - Lançamento do .Net 4.5.1 no VS 2013 | Inicio do Roslyn , um novo compilador para C# e VB.net
>> temos aqui o ASP.NET mais consolidado MVC,Web API e SignaIR
Em 2014 - Satya Nadella se Torna CEO da Microsoft e direciona o foco da empresa para cloud | Criação do .Net Foundation para gestão de projetos Open-source
>> Widows Azure passa a se chamar Microsoft Azure | É introduzido e conceito do Asp.Net VNext.
Em 2016 - Lançamento do .net Core 1.0 - totalmente novo , open source e multiplataforma
Em 2019 - Lançamento do .net Framework 4.8 com C#7.3 no VS2019 | Lançamento do .net Core 2.0 com C# 8.0 no VS 2019 , VSCode ou VS for Mac 2019
Em 2020 - .Net Framework está pronto na versão 4.8 | outras coisas deixa de ser evoluido - junto com ele WCF e ASP.Net Webforms 
>> Previsto lançamento do .Net 5 !

--------------------------------------------------------------------

Parte 2. - O que é, Como e onde usar .net
>> Introdução ao .net
    O que é ? Infraestrutura para desenvolvimento de software criada pela Microsoft
    Uma Aplicação .Net é desenvolvida para e roda em uma das seguintes implementações do .net:
        1. .net Core
        2. .net Framework
        3. Mono
        4. Universal Windows Plataform (UWP)
    .Net Standard Library  : Um contraro que possui todas as funções das citadas do .net acima
        Uma Biblioteca que tem tudo!
    
    Como ? cada implementação inclui um ou mais .Net Runtimes (ambiente de execução)
    Atualmente a Microsoft desenvolve e suporta 3 liguangens para .Net , são elas :
        1. C#
        2. F#
        3. VB    
    Aonde usar o DotNet ? 
        Desktop(WPF | Windows Forms | UWP)  
        web(ASP.NET)  
        Cloud(azure)  
        Mobile(Xamarin)  
        Gaming(unity)  
        Iot(ARM32 e ARM64)  
        AI (MLNET | .net for Apache Spark)
>> Iniciando com .net
   1. Preparar o ambiente
     Download .Net 3.1 SDK
     Download VS Code
   2. Conhecendo a CLI do .Net
     dotnet --help : Traz a documentação na linha de comando do dotnet
   3. Crianco uma Aplicação console 
     Uma Aplicação que será criada via Console , simples
     Comando utilizados com frequencia :
        dotnet restore : restaura os pacotes da Aplicação
        dotnet build : restaura pacotes e pega o codigo fonte e compila o projeto e gera os binario
        dotnet run : executa o projeto
    Console.Writeline(""); >> mostra uma mensagem no Console pulando uma linha por mensagem.
    Sempre executar o donet build/run no diretório do csproj , senão ele irá dar erro.
Conhecendo o C#
>> O que é e como funciona o C#
  Conhecendo o C#
    1. O que é C#?
      C# é uma linguagem elegante , orientada a obj e fortemente tipada
      A sintax do C# é similar a do C,C++ ou java

      Os programas em c# são executados no .Net  que inclui:
      > CLR
      > Conjunto unificado de bibliotecas de classes
      Atualmente o compilador do C# é o Roslyn
    2. Como Funciona?
      Codigo fonte é compilado em uma linguagem intermediario
      O código e os recursos de IL são armazenados no disco em um arquivo executavel chamado Assembly geramlente com um extensão .exe ou .dll
      Quandoo programa C# e executado , o assembly é carregado CLR
      Em Seguida o CLR executar a complicação "Just in time" para conversar em IL e depois em linguagem de maquina
      O CLR tambem fornece outros serviços , como :
      > Garbage Collector
      > Exception Handler
      > Resoources Manager
      Além dos serviços de tempo de execução o .Net tambem inclui uma extensa biblioteca com milhares de classes que fornecem uma ampla variedade de funcionalidades.
      



    



